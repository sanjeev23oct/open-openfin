{"version":3,"file":"main-ClkCcYlp.js","sources":["../../src/core/BrowserWindowManager.ts","../../../fdc3-core/dist/ChannelManager.js","../../../fdc3-core/dist/IntentResolver.js","../../../fdc3-core/dist/ContextRouter.js","../../src/diagnostics/FDC3Monitor.ts","../../src/core/PostMessageRouter.ts","../../src/core/WebWorkspaceManager.ts","../../src/core/WebPlatformCore.ts","../../src/storage/StorageManager.ts","../../src/utils/platformDetection.ts","../../src/diagnostics/FDC3MonitorUI.ts","../../src/main.ts"],"sourcesContent":["/**\r\n * Browser Window Manager\r\n * Manages iframe-based windows within the browser tab\r\n */\r\n\r\nimport { WindowConfig, WindowInstance, Position, Size } from '../types';\r\n\r\nexport class BrowserWindowManager {\r\n  private windows: Map<string, WindowInstance> = new Map();\r\n  private nextZIndex: number = 1000;\r\n  private container: HTMLElement;\r\n  private focusedWindowId: string | null = null;\r\n  \r\n  constructor(containerId: string = 'platform-container') {\r\n    const container = document.getElementById(containerId);\r\n    if (!container) {\r\n      throw new Error(`Container element #${containerId} not found`);\r\n    }\r\n    this.container = container;\r\n  }\r\n  \r\n  createWindow(config: WindowConfig): WindowInstance {\r\n    console.log('[BrowserWindowManager] Creating window:', config.appId);\r\n    \r\n    const windowId = this.generateWindowId();\r\n    \r\n    // Create window wrapper\r\n    const windowWrapper = document.createElement('div');\r\n    windowWrapper.id = windowId;\r\n    windowWrapper.className = 'platform-window';\r\n    windowWrapper.style.cssText = `\r\n      position: absolute;\r\n      left: ${config.position?.x || 100}px;\r\n      top: ${config.position?.y || 100}px;\r\n      width: ${config.size?.width || 800}px;\r\n      height: ${config.size?.height || 600}px;\r\n      z-index: ${this.nextZIndex++};\r\n      background: white;\r\n      border: 1px solid #ccc;\r\n      border-radius: 8px;\r\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\r\n      display: flex;\r\n      flex-direction: column;\r\n      overflow: hidden;\r\n    `;\r\n    \r\n    // Create title bar if frame is enabled\r\n    if (config.frame !== false) {\r\n      const titleBar = this.createTitleBar(windowId, config.title);\r\n      windowWrapper.appendChild(titleBar);\r\n    }\r\n    \r\n    // Create iframe\r\n    const iframe = document.createElement('iframe');\r\n    iframe.src = config.url;\r\n    iframe.style.cssText = `\r\n      flex: 1;\r\n      border: none;\r\n      width: 100%;\r\n      height: 100%;\r\n    `;\r\n    \r\n    // Set sandbox attributes\r\n    if (config.sandbox) {\r\n      iframe.sandbox.add(...config.sandbox);\r\n    } else {\r\n      // Default sandbox\r\n      iframe.sandbox.add('allow-scripts', 'allow-same-origin', 'allow-forms', 'allow-popups');\r\n    }\r\n    \r\n    windowWrapper.appendChild(iframe);\r\n    this.container.appendChild(windowWrapper);\r\n    \r\n    // Create window instance\r\n    const windowInstance: WindowInstance = {\r\n      id: windowId,\r\n      appId: config.appId,\r\n      iframe,\r\n      position: config.position || { x: 100, y: 100 },\r\n      size: config.size || { width: 800, height: 600 },\r\n      state: 'normal',\r\n      zIndex: this.nextZIndex - 1,\r\n      focus: () => this.focusWindow(windowId),\r\n      close: () => this.destroyWindow(windowId)\r\n    };\r\n    \r\n    this.windows.set(windowId, windowInstance);\r\n    \r\n    // Setup window interactions\r\n    this.setupWindowInteractions(windowId, windowWrapper, config);\r\n    \r\n    // Focus the new window\r\n    this.focusWindow(windowId);\r\n    \r\n    return windowInstance;\r\n  }\r\n  \r\n  private createTitleBar(windowId: string, title: string): HTMLElement {\r\n    const titleBar = document.createElement('div');\r\n    titleBar.className = 'window-titlebar';\r\n    titleBar.style.cssText = `\r\n      height: 32px;\r\n      background: #f5f5f5;\r\n      border-bottom: 1px solid #ddd;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n      padding: 0 8px;\r\n      cursor: move;\r\n      user-select: none;\r\n    `;\r\n    \r\n    const titleText = document.createElement('span');\r\n    titleText.textContent = title;\r\n    titleText.style.cssText = `\r\n      font-size: 13px;\r\n      font-weight: 500;\r\n      color: #333;\r\n    `;\r\n    \r\n    const controls = document.createElement('div');\r\n    controls.style.cssText = `\r\n      display: flex;\r\n      gap: 8px;\r\n    `;\r\n    \r\n    // Minimize button\r\n    const minimizeBtn = this.createControlButton('−', () => this.minimizeWindow(windowId));\r\n    controls.appendChild(minimizeBtn);\r\n    \r\n    // Maximize button\r\n    const maximizeBtn = this.createControlButton('□', () => this.maximizeWindow(windowId));\r\n    controls.appendChild(maximizeBtn);\r\n    \r\n    // Close button\r\n    const closeBtn = this.createControlButton('×', () => this.destroyWindow(windowId));\r\n    closeBtn.style.color = '#d32f2f';\r\n    controls.appendChild(closeBtn);\r\n    \r\n    titleBar.appendChild(titleText);\r\n    titleBar.appendChild(controls);\r\n    \r\n    return titleBar;\r\n  }\r\n  \r\n  private createControlButton(text: string, onClick: () => void): HTMLElement {\r\n    const button = document.createElement('button');\r\n    button.textContent = text;\r\n    button.style.cssText = `\r\n      width: 24px;\r\n      height: 24px;\r\n      border: none;\r\n      background: transparent;\r\n      cursor: pointer;\r\n      font-size: 16px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      border-radius: 4px;\r\n    `;\r\n    \r\n    button.addEventListener('mouseenter', () => {\r\n      button.style.background = '#e0e0e0';\r\n    });\r\n    \r\n    button.addEventListener('mouseleave', () => {\r\n      button.style.background = 'transparent';\r\n    });\r\n    \r\n    button.addEventListener('click', (e) => {\r\n      e.stopPropagation();\r\n      onClick();\r\n    });\r\n    \r\n    return button;\r\n  }\r\n  \r\n  private setupWindowInteractions(windowId: string, wrapper: HTMLElement, config: WindowConfig): void {\r\n    const titleBar = wrapper.querySelector('.window-titlebar') as HTMLElement;\r\n    if (!titleBar) return;\r\n    \r\n    // Add resize handles if resizable\r\n    if (config.resizable !== false) {\r\n      this.addResizeHandles(windowId, wrapper, config);\r\n    }\r\n    \r\n    let isDragging = false;\r\n    let dragStartX = 0;\r\n    let dragStartY = 0;\r\n    let windowStartX = 0;\r\n    let windowStartY = 0;\r\n    \r\n    titleBar.addEventListener('mousedown', (e) => {\r\n      if ((e.target as HTMLElement).tagName === 'BUTTON') return;\r\n      \r\n      isDragging = true;\r\n      dragStartX = e.clientX;\r\n      dragStartY = e.clientY;\r\n      \r\n      const window = this.windows.get(windowId);\r\n      if (window) {\r\n        windowStartX = window.position.x;\r\n        windowStartY = window.position.y;\r\n      }\r\n      \r\n      this.focusWindow(windowId);\r\n      \r\n      e.preventDefault();\r\n    });\r\n    \r\n    document.addEventListener('mousemove', (e) => {\r\n      if (!isDragging) return;\r\n      \r\n      const deltaX = e.clientX - dragStartX;\r\n      const deltaY = e.clientY - dragStartY;\r\n      \r\n      this.moveWindow(windowId, {\r\n        x: windowStartX + deltaX,\r\n        y: windowStartY + deltaY\r\n      });\r\n    });\r\n    \r\n    document.addEventListener('mouseup', () => {\r\n      isDragging = false;\r\n    });\r\n    \r\n    // Focus on click\r\n    wrapper.addEventListener('mousedown', () => {\r\n      this.focusWindow(windowId);\r\n    });\r\n  }\r\n  \r\n  private addResizeHandles(windowId: string, wrapper: HTMLElement, config: WindowConfig): void {\r\n    const handles = ['n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw'];\r\n    \r\n    handles.forEach(direction => {\r\n      const handle = document.createElement('div');\r\n      handle.className = `resize-handle resize-${direction}`;\r\n      handle.style.cssText = this.getResizeHandleStyle(direction);\r\n      \r\n      let isResizing = false;\r\n      let startX = 0;\r\n      let startY = 0;\r\n      let startWidth = 0;\r\n      let startHeight = 0;\r\n      let startLeft = 0;\r\n      let startTop = 0;\r\n      \r\n      handle.addEventListener('mousedown', (e) => {\r\n        e.stopPropagation();\r\n        isResizing = true;\r\n        startX = e.clientX;\r\n        startY = e.clientY;\r\n        \r\n        const window = this.windows.get(windowId);\r\n        if (window) {\r\n          startWidth = window.size.width;\r\n          startHeight = window.size.height;\r\n          startLeft = window.position.x;\r\n          startTop = window.position.y;\r\n        }\r\n        \r\n        this.focusWindow(windowId);\r\n      });\r\n      \r\n      document.addEventListener('mousemove', (e) => {\r\n        if (!isResizing) return;\r\n        \r\n        const deltaX = e.clientX - startX;\r\n        const deltaY = e.clientY - startY;\r\n        \r\n        const window = this.windows.get(windowId);\r\n        if (!window) return;\r\n        \r\n        let newWidth = startWidth;\r\n        let newHeight = startHeight;\r\n        let newLeft = startLeft;\r\n        let newTop = startTop;\r\n        \r\n        // Calculate new dimensions based on direction\r\n        if (direction.includes('e')) {\r\n          newWidth = Math.max(config.minSize?.width || 200, startWidth + deltaX);\r\n        }\r\n        if (direction.includes('w')) {\r\n          newWidth = Math.max(config.minSize?.width || 200, startWidth - deltaX);\r\n          newLeft = startLeft + (startWidth - newWidth);\r\n        }\r\n        if (direction.includes('s')) {\r\n          newHeight = Math.max(config.minSize?.height || 150, startHeight + deltaY);\r\n        }\r\n        if (direction.includes('n')) {\r\n          newHeight = Math.max(config.minSize?.height || 150, startHeight - deltaY);\r\n          newTop = startTop + (startHeight - newHeight);\r\n        }\r\n        \r\n        // Apply max size constraints\r\n        if (config.maxSize) {\r\n          if (config.maxSize.width) newWidth = Math.min(newWidth, config.maxSize.width);\r\n          if (config.maxSize.height) newHeight = Math.min(newHeight, config.maxSize.height);\r\n        }\r\n        \r\n        this.resizeWindow(windowId, { width: newWidth, height: newHeight });\r\n        if (newLeft !== startLeft || newTop !== startTop) {\r\n          this.moveWindow(windowId, { x: newLeft, y: newTop });\r\n        }\r\n      });\r\n      \r\n      document.addEventListener('mouseup', () => {\r\n        isResizing = false;\r\n      });\r\n      \r\n      wrapper.appendChild(handle);\r\n    });\r\n  }\r\n  \r\n  private getResizeHandleStyle(direction: string): string {\r\n    const baseStyle = `\r\n      position: absolute;\r\n      z-index: 10;\r\n    `;\r\n    \r\n    const cursors: Record<string, string> = {\r\n      'n': 'ns-resize',\r\n      'ne': 'nesw-resize',\r\n      'e': 'ew-resize',\r\n      'se': 'nwse-resize',\r\n      's': 'ns-resize',\r\n      'sw': 'nesw-resize',\r\n      'w': 'ew-resize',\r\n      'nw': 'nwse-resize'\r\n    };\r\n    \r\n    let positionStyle = '';\r\n    \r\n    switch (direction) {\r\n      case 'n':\r\n        positionStyle = 'top: 0; left: 8px; right: 8px; height: 4px;';\r\n        break;\r\n      case 'ne':\r\n        positionStyle = 'top: 0; right: 0; width: 8px; height: 8px;';\r\n        break;\r\n      case 'e':\r\n        positionStyle = 'right: 0; top: 8px; bottom: 8px; width: 4px;';\r\n        break;\r\n      case 'se':\r\n        positionStyle = 'bottom: 0; right: 0; width: 8px; height: 8px;';\r\n        break;\r\n      case 's':\r\n        positionStyle = 'bottom: 0; left: 8px; right: 8px; height: 4px;';\r\n        break;\r\n      case 'sw':\r\n        positionStyle = 'bottom: 0; left: 0; width: 8px; height: 8px;';\r\n        break;\r\n      case 'w':\r\n        positionStyle = 'left: 0; top: 8px; bottom: 8px; width: 4px;';\r\n        break;\r\n      case 'nw':\r\n        positionStyle = 'top: 0; left: 0; width: 8px; height: 8px;';\r\n        break;\r\n    }\r\n    \r\n    return `${baseStyle}${positionStyle}cursor: ${cursors[direction]};`;\r\n  }\r\n  \r\n  destroyWindow(windowId: string): void {\r\n    console.log('[BrowserWindowManager] Destroying window:', windowId);\r\n    \r\n    const window = this.windows.get(windowId);\r\n    if (!window) return;\r\n    \r\n    const wrapper = document.getElementById(windowId);\r\n    if (wrapper) {\r\n      wrapper.remove();\r\n    }\r\n    \r\n    this.windows.delete(windowId);\r\n    \r\n    if (this.focusedWindowId === windowId) {\r\n      this.focusedWindowId = null;\r\n    }\r\n  }\r\n  \r\n  moveWindow(windowId: string, position: Position): void {\r\n    const window = this.windows.get(windowId);\r\n    if (!window) return;\r\n    \r\n    window.position = position;\r\n    \r\n    const wrapper = document.getElementById(windowId);\r\n    if (wrapper) {\r\n      wrapper.style.left = `${position.x}px`;\r\n      wrapper.style.top = `${position.y}px`;\r\n    }\r\n  }\r\n  \r\n  resizeWindow(windowId: string, size: Size): void {\r\n    const window = this.windows.get(windowId);\r\n    if (!window) return;\r\n    \r\n    window.size = size;\r\n    \r\n    const wrapper = document.getElementById(windowId);\r\n    if (wrapper) {\r\n      wrapper.style.width = `${size.width}px`;\r\n      wrapper.style.height = `${size.height}px`;\r\n    }\r\n  }\r\n  \r\n  minimizeWindow(windowId: string): void {\r\n    console.log('[BrowserWindowManager] Minimizing window:', windowId);\r\n    \r\n    const window = this.windows.get(windowId);\r\n    if (!window) return;\r\n    \r\n    window.state = 'minimized';\r\n    \r\n    const wrapper = document.getElementById(windowId);\r\n    if (wrapper) {\r\n      wrapper.style.display = 'none';\r\n    }\r\n  }\r\n  \r\n  maximizeWindow(windowId: string): void {\r\n    console.log('[BrowserWindowManager] Maximizing window:', windowId);\r\n    \r\n    const window = this.windows.get(windowId);\r\n    if (!window) return;\r\n    \r\n    const wrapper = document.getElementById(windowId);\r\n    if (!wrapper) return;\r\n    \r\n    if (window.state === 'maximized') {\r\n      // Restore\r\n      window.state = 'normal';\r\n      wrapper.style.left = `${window.position.x}px`;\r\n      wrapper.style.top = `${window.position.y}px`;\r\n      wrapper.style.width = `${window.size.width}px`;\r\n      wrapper.style.height = `${window.size.height}px`;\r\n    } else {\r\n      // Maximize\r\n      window.state = 'maximized';\r\n      wrapper.style.left = '0';\r\n      wrapper.style.top = '0';\r\n      wrapper.style.width = '100%';\r\n      wrapper.style.height = '100%';\r\n    }\r\n  }\r\n  \r\n  focusWindow(windowId: string): void {\r\n    const window = this.windows.get(windowId);\r\n    if (!window) return;\r\n    \r\n    // Update z-index\r\n    window.zIndex = this.nextZIndex++;\r\n    \r\n    const wrapper = document.getElementById(windowId);\r\n    if (wrapper) {\r\n      wrapper.style.zIndex = window.zIndex.toString();\r\n    }\r\n    \r\n    this.focusedWindowId = windowId;\r\n  }\r\n  \r\n  getWindow(windowId: string): WindowInstance | undefined {\r\n    return this.windows.get(windowId);\r\n  }\r\n  \r\n  getAllWindows(): WindowInstance[] {\r\n    return Array.from(this.windows.values());\r\n  }\r\n  \r\n  getFocusedWindow(): WindowInstance | null {\r\n    return this.focusedWindowId ? this.windows.get(this.focusedWindowId) || null : null;\r\n  }\r\n  \r\n  private generateWindowId(): string {\r\n    return `window-${Date.now()}-${Math.random().toString(36).substring(7)}`;\r\n  }\r\n}\r\n","/**\n * Channel implementation\n */\nclass ChannelImpl {\n    id;\n    type;\n    displayMetadata;\n    contextListeners = new Map();\n    currentContext = new Map();\n    constructor(id, type, displayMetadata) {\n        this.id = id;\n        this.type = type;\n        this.displayMetadata = displayMetadata;\n    }\n    async broadcast(context) {\n        // Store context\n        this.currentContext.set(context.type, context);\n        // Notify listeners\n        const typeListeners = this.contextListeners.get(context.type) || new Set();\n        const allListeners = this.contextListeners.get('*') || new Set();\n        for (const handler of [...typeListeners, ...allListeners]) {\n            try {\n                await handler(context);\n            }\n            catch (error) {\n                console.error('Context handler error:', error);\n            }\n        }\n    }\n    async getCurrentContext(contextType) {\n        if (contextType) {\n            return this.currentContext.get(contextType) || null;\n        }\n        // Return most recent context\n        const contexts = Array.from(this.currentContext.values());\n        return contexts.length > 0 ? contexts[contexts.length - 1] : null;\n    }\n    addContextListener(contextType, handler) {\n        const type = contextType || '*';\n        if (!this.contextListeners.has(type)) {\n            this.contextListeners.set(type, new Set());\n        }\n        this.contextListeners.get(type).add(handler);\n        return {\n            unsubscribe: () => {\n                this.contextListeners.get(type)?.delete(handler);\n            }\n        };\n    }\n}\n/**\n * Private channel implementation\n */\nclass PrivateChannelImpl {\n    id;\n    type = 'private';\n    contextListeners = new Map();\n    currentContext = new Map();\n    disconnectHandlers = new Set();\n    isDisconnected = false;\n    constructor(id) {\n        this.id = id;\n    }\n    async broadcast(context) {\n        // Store context\n        this.currentContext.set(context.type, context);\n        // Notify listeners\n        const typeListeners = this.contextListeners.get(context.type) || new Set();\n        const allListeners = this.contextListeners.get('*') || new Set();\n        for (const handler of [...typeListeners, ...allListeners]) {\n            try {\n                await handler(context);\n            }\n            catch (error) {\n                console.error('Context handler error:', error);\n            }\n        }\n    }\n    async getCurrentContext(contextType) {\n        if (contextType) {\n            return this.currentContext.get(contextType) || null;\n        }\n        // Return most recent context\n        const contexts = Array.from(this.currentContext.values());\n        return contexts.length > 0 ? contexts[contexts.length - 1] : null;\n    }\n    addContextListener(contextType, handler) {\n        const type = contextType || '*';\n        if (!this.contextListeners.has(type)) {\n            this.contextListeners.set(type, new Set());\n        }\n        this.contextListeners.get(type).add(handler);\n        return {\n            unsubscribe: () => {\n                this.contextListeners.get(type)?.delete(handler);\n            }\n        };\n    }\n    onDisconnect(handler) {\n        this.disconnectHandlers.add(handler);\n    }\n    async disconnect() {\n        if (this.isDisconnected) {\n            return;\n        }\n        this.isDisconnected = true;\n        // Notify disconnect handlers\n        for (const handler of this.disconnectHandlers) {\n            try {\n                handler();\n            }\n            catch (error) {\n                console.error('Disconnect handler error:', error);\n            }\n        }\n        this.disconnectHandlers.clear();\n    }\n}\n/**\n * Channel Manager - manages user, app, and private channels\n * Platform-agnostic implementation\n */\nexport class ChannelManager {\n    userChannels = new Map();\n    appChannels = new Map();\n    privateChannels = new Map();\n    constructor() {\n        this.initializeUserChannels();\n    }\n    /**\n     * Initialize standard user channels\n     */\n    initializeUserChannels() {\n        const standardChannels = [\n            { id: 'red', color: '#f44336', name: 'Red' },\n            { id: 'blue', color: '#2196F3', name: 'Blue' },\n            { id: 'green', color: '#4CAF50', name: 'Green' },\n            { id: 'yellow', color: '#FFC107', name: 'Yellow' },\n            { id: 'orange', color: '#FF9800', name: 'Orange' },\n            { id: 'purple', color: '#9C27B0', name: 'Purple' }\n        ];\n        for (const channelDef of standardChannels) {\n            const channel = new ChannelImpl(channelDef.id, 'user', {\n                name: channelDef.name,\n                color: channelDef.color\n            });\n            this.userChannels.set(channelDef.id, channel);\n        }\n    }\n    /**\n     * Get user channels\n     */\n    getUserChannels() {\n        return Array.from(this.userChannels.values());\n    }\n    /**\n     * Get user channel by ID\n     */\n    getUserChannel(channelId) {\n        return this.userChannels.get(channelId) || null;\n    }\n    /**\n     * Get or create app channel\n     */\n    getOrCreateAppChannel(channelId) {\n        if (!this.appChannels.has(channelId)) {\n            const channel = new ChannelImpl(channelId, 'app');\n            this.appChannels.set(channelId, channel);\n        }\n        return this.appChannels.get(channelId);\n    }\n    /**\n     * Create private channel\n     */\n    createPrivateChannel() {\n        const channelId = this.generatePrivateChannelId();\n        const channel = new PrivateChannelImpl(channelId);\n        this.privateChannels.set(channelId, channel);\n        return channel;\n    }\n    /**\n     * Get private channel by ID\n     */\n    getPrivateChannel(channelId) {\n        return this.privateChannels.get(channelId) || null;\n    }\n    /**\n     * Generate unique private channel ID\n     */\n    generatePrivateChannelId() {\n        return `private-${Date.now()}-${Math.random().toString(36).substring(7)}`;\n    }\n}\n//# sourceMappingURL=ChannelManager.js.map","/**\n * Intent Resolver - resolves intents to handler applications\n * Platform-agnostic implementation\n */\nexport class IntentResolver {\n    intentHandlers = new Map();\n    appMetadata = new Map();\n    /**\n     * Register an intent handler\n     */\n    registerIntentHandler(registration) {\n        const { intent } = registration;\n        if (!this.intentHandlers.has(intent)) {\n            this.intentHandlers.set(intent, []);\n        }\n        this.intentHandlers.get(intent).push(registration);\n    }\n    /**\n     * Unregister intent handler\n     */\n    unregisterIntentHandler(appId, intent) {\n        const handlers = this.intentHandlers.get(intent);\n        if (handlers) {\n            const filtered = handlers.filter(h => h.appId !== appId);\n            if (filtered.length > 0) {\n                this.intentHandlers.set(intent, filtered);\n            }\n            else {\n                this.intentHandlers.delete(intent);\n            }\n        }\n    }\n    /**\n     * Register app metadata\n     */\n    registerAppMetadata(metadata) {\n        this.appMetadata.set(metadata.appId, metadata);\n    }\n    /**\n     * Find handlers for an intent\n     */\n    findIntentHandlers(intent, context) {\n        const handlers = this.intentHandlers.get(intent) || [];\n        // TODO: Filter by context type if provided\n        return handlers;\n    }\n    /**\n     * Resolve intent to specific handler\n     */\n    async resolveIntent(intent, context, target) {\n        const handlers = this.findIntentHandlers(intent, context);\n        if (handlers.length === 0) {\n            throw new Error(`No handlers found for intent: ${intent}`);\n        }\n        let selectedHandler;\n        if (target) {\n            // Find specific target\n            selectedHandler = handlers.find(h => h.appId === target.appId);\n            if (!selectedHandler) {\n                throw new Error(`Target app ${target.appId} does not handle intent ${intent}`);\n            }\n        }\n        else if (handlers.length === 1) {\n            // Only one handler, use it\n            selectedHandler = handlers[0];\n        }\n        else {\n            // Multiple handlers - show resolver UI\n            selectedHandler = await this.showResolverUI(intent, handlers);\n        }\n        // Execute handler\n        return await selectedHandler.handler(context);\n    }\n    /**\n     * Get app intents\n     */\n    getAppIntents(context) {\n        const intents = [];\n        for (const [intentName, handlers] of this.intentHandlers.entries()) {\n            const apps = handlers.map(h => {\n                const metadata = this.appMetadata.get(h.appId);\n                return metadata || {\n                    appId: h.appId,\n                    name: h.appId\n                };\n            });\n            intents.push({\n                intent: intentName,\n                apps\n            });\n        }\n        return intents;\n    }\n    /**\n     * Show resolver UI for multiple handlers\n     * Platform-specific implementations should override this\n     */\n    async showResolverUI(intent, handlers) {\n        // Default: return first handler\n        // Platform-specific implementations can show UI dialog\n        console.log(`Multiple handlers for ${intent}, using first handler`);\n        return handlers[0];\n    }\n}\n//# sourceMappingURL=IntentResolver.js.map","/**\n * Context Router - routes context messages to subscribers\n * Platform-agnostic implementation\n */\nexport class ContextRouter {\n    subscriptions = new Map();\n    subscriptionsByType = new Map();\n    subscriptionsByApp = new Map();\n    /**\n     * Subscribe to context type\n     */\n    subscribe(appId, contextType, handler) {\n        const subscriptionId = this.generateSubscriptionId();\n        const type = contextType || '*';\n        const subscription = {\n            id: subscriptionId,\n            appId,\n            contextType: type,\n            handler\n        };\n        // Store subscription\n        this.subscriptions.set(subscriptionId, subscription);\n        // Index by type\n        if (!this.subscriptionsByType.has(type)) {\n            this.subscriptionsByType.set(type, new Set());\n        }\n        this.subscriptionsByType.get(type).add(subscriptionId);\n        // Index by app\n        if (!this.subscriptionsByApp.has(appId)) {\n            this.subscriptionsByApp.set(appId, new Set());\n        }\n        this.subscriptionsByApp.get(appId).add(subscriptionId);\n        return {\n            unsubscribe: () => {\n                this.unsubscribe(subscriptionId);\n            }\n        };\n    }\n    /**\n     * Unsubscribe\n     */\n    unsubscribe(subscriptionId) {\n        const subscription = this.subscriptions.get(subscriptionId);\n        if (!subscription) {\n            return;\n        }\n        // Remove from indexes\n        this.subscriptionsByType.get(subscription.contextType)?.delete(subscriptionId);\n        this.subscriptionsByApp.get(subscription.appId)?.delete(subscriptionId);\n        // Remove subscription\n        this.subscriptions.delete(subscriptionId);\n    }\n    /**\n     * Route context to subscribers\n     */\n    async routeContext(context, excludeAppId) {\n        // Get subscribers for this context type\n        const typeSubscribers = this.subscriptionsByType.get(context.type) || new Set();\n        const allSubscribers = this.subscriptionsByType.get('*') || new Set();\n        const subscriberIds = new Set([...typeSubscribers, ...allSubscribers]);\n        // Notify subscribers\n        for (const subscriptionId of subscriberIds) {\n            const subscription = this.subscriptions.get(subscriptionId);\n            if (!subscription) {\n                continue;\n            }\n            // Skip excluded app\n            if (excludeAppId && subscription.appId === excludeAppId) {\n                continue;\n            }\n            try {\n                await subscription.handler(context);\n            }\n            catch (error) {\n                console.error(`Context handler error for ${subscription.appId}:`, error);\n            }\n        }\n    }\n    /**\n     * Unsubscribe all for an app\n     */\n    unsubscribeApp(appId) {\n        const subscriptionIds = this.subscriptionsByApp.get(appId);\n        if (!subscriptionIds) {\n            return;\n        }\n        for (const subscriptionId of subscriptionIds) {\n            this.unsubscribe(subscriptionId);\n        }\n    }\n    /**\n     * Generate unique subscription ID\n     */\n    generateSubscriptionId() {\n        return `sub-${Date.now()}-${Math.random().toString(36).substring(7)}`;\n    }\n}\n//# sourceMappingURL=ContextRouter.js.map","/**\r\n * FDC3 Monitor\r\n * Tracks and displays all FDC3 messages for debugging\r\n */\r\n\r\nexport interface FDC3Message {\r\n  id: string;\r\n  timestamp: number;\r\n  direction: 'sent' | 'received';\r\n  type: string;\r\n  from?: string;\r\n  to?: string;\r\n  payload: any;\r\n  channel?: string;\r\n}\r\n\r\nexport class FDC3Monitor {\r\n  private messages: FDC3Message[] = [];\r\n  private maxMessages: number = 100;\r\n  private listeners: Set<(messages: FDC3Message[]) => void> = new Set();\r\n  private enabled: boolean = false;\r\n\r\n  constructor(maxMessages: number = 100) {\r\n    this.maxMessages = maxMessages;\r\n  }\r\n\r\n  enable(): void {\r\n    this.enabled = true;\r\n    console.log('[FDC3Monitor] Enabled');\r\n  }\r\n\r\n  disable(): void {\r\n    this.enabled = false;\r\n    console.log('[FDC3Monitor] Disabled');\r\n  }\r\n\r\n  isEnabled(): boolean {\r\n    return this.enabled;\r\n  }\r\n\r\n  logMessage(message: Omit<FDC3Message, 'id' | 'timestamp'>): void {\r\n    if (!this.enabled) return;\r\n\r\n    const fullMessage: FDC3Message = {\r\n      ...message,\r\n      id: `msg-${Date.now()}-${Math.random().toString(36).substring(7)}`,\r\n      timestamp: Date.now()\r\n    };\r\n\r\n    this.messages.unshift(fullMessage);\r\n\r\n    // Keep only the last N messages\r\n    if (this.messages.length > this.maxMessages) {\r\n      this.messages = this.messages.slice(0, this.maxMessages);\r\n    }\r\n\r\n    // Notify listeners\r\n    this.notifyListeners();\r\n  }\r\n\r\n  getMessages(): FDC3Message[] {\r\n    return [...this.messages];\r\n  }\r\n\r\n  clearMessages(): void {\r\n    this.messages = [];\r\n    this.notifyListeners();\r\n  }\r\n\r\n  subscribe(listener: (messages: FDC3Message[]) => void): () => void {\r\n    this.listeners.add(listener);\r\n    // Return unsubscribe function\r\n    return () => {\r\n      this.listeners.delete(listener);\r\n    };\r\n  }\r\n\r\n  private notifyListeners(): void {\r\n    const messages = this.getMessages();\r\n    this.listeners.forEach(listener => {\r\n      try {\r\n        listener(messages);\r\n      } catch (error) {\r\n        console.error('[FDC3Monitor] Error in listener:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  exportMessages(): string {\r\n    return JSON.stringify(this.messages, null, 2);\r\n  }\r\n\r\n  getStats(): {\r\n    total: number;\r\n    sent: number;\r\n    received: number;\r\n    byType: Record<string, number>;\r\n  } {\r\n    const stats = {\r\n      total: this.messages.length,\r\n      sent: 0,\r\n      received: 0,\r\n      byType: {} as Record<string, number>\r\n    };\r\n\r\n    this.messages.forEach(msg => {\r\n      if (msg.direction === 'sent') stats.sent++;\r\n      if (msg.direction === 'received') stats.received++;\r\n      \r\n      stats.byType[msg.type] = (stats.byType[msg.type] || 0) + 1;\r\n    });\r\n\r\n    return stats;\r\n  }\r\n}\r\n\r\n// Global singleton instance\r\nexport const fdc3Monitor = new FDC3Monitor();\r\n","/**\r\n * PostMessage Router\r\n * Routes FDC3 messages between platform and iframes using postMessage\r\n */\r\n\r\nimport { BridgeMessage } from '../types';\r\nimport { ChannelManager } from '@desktop-interop/fdc3-core';\r\nimport { IntentResolver } from '@desktop-interop/fdc3-core';\r\nimport { ContextRouter } from '@desktop-interop/fdc3-core';\r\nimport { fdc3Monitor } from '../diagnostics/FDC3Monitor';\r\n\r\n// Define Context type locally to avoid import issues\r\ntype Context = {\r\n  type: string;\r\n  [key: string]: any;\r\n};\r\n\r\nexport class PostMessageRouter {\r\n  private registeredApps: Map<string, HTMLIFrameElement> = new Map();\r\n  private appChannels: Map<string, string> = new Map(); // appId -> channelId\r\n  private channelManager: ChannelManager;\r\n  private intentResolver: IntentResolver;\r\n  private contextRouter: ContextRouter;\r\n  private trustedOrigins: Set<string> = new Set(['*']); // TODO: Configure properly\r\n  \r\n  constructor() {\r\n    this.channelManager = new ChannelManager();\r\n    this.intentResolver = new IntentResolver();\r\n    this.contextRouter = new ContextRouter();\r\n    this.setupMessageListener();\r\n  }\r\n  \r\n  private setupMessageListener(): void {\r\n    window.addEventListener('message', (event: MessageEvent) => {\r\n      this.handleMessage(event);\r\n    });\r\n  }\r\n  \r\n  private handleMessage(event: MessageEvent): void {\r\n    // Validate message structure\r\n    if (!event.data || typeof event.data !== 'object') {\r\n      return;\r\n    }\r\n    \r\n    const { type, payload, messageId, appId, context } = event.data;\r\n    \r\n    if (!type) {\r\n      return;\r\n    }\r\n    \r\n    // Handle simple FDC3 broadcast format from apps\r\n    if (type === 'fdc3.broadcast' && context) {\r\n      // Find which app sent this by matching the iframe\r\n      const sourceAppId = this.findAppIdByWindow(event.source as Window);\r\n      if (sourceAppId) {\r\n        console.log('[PostMessageRouter] FDC3 broadcast from', sourceAppId);\r\n        \r\n        // Log to monitor\r\n        fdc3Monitor.logMessage({\r\n          direction: 'received',\r\n          type: 'broadcast',\r\n          from: sourceAppId,\r\n          payload: context\r\n        });\r\n        \r\n        this.handleBroadcast(sourceAppId, context);\r\n        // Broadcast to all other apps\r\n        this.broadcastContextToApps(context, sourceAppId);\r\n      }\r\n      return;\r\n    }\r\n    \r\n    // Handle standard platform messages\r\n    if (!appId) {\r\n      console.warn('[PostMessageRouter] Invalid message structure');\r\n      return;\r\n    }\r\n    \r\n    // Validate app is registered\r\n    if (!this.registeredApps.has(appId)) {\r\n      console.warn('[PostMessageRouter] Message from unregistered app:', appId);\r\n      return;\r\n    }\r\n    \r\n    console.log('[PostMessageRouter] Received message:', type, 'from', appId);\r\n    \r\n    // Route message based on type\r\n    this.routeMessage(type, payload, messageId, appId, event.source as Window);\r\n  }\r\n  \r\n  private findAppIdByWindow(window: Window): string | null {\r\n    for (const [appId, iframe] of this.registeredApps.entries()) {\r\n      if (iframe.contentWindow === window) {\r\n        return appId;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  \r\n  private broadcastContextToApps(context: Context, excludeAppId?: string): void {\r\n    for (const [appId, iframe] of this.registeredApps.entries()) {\r\n      if (appId === excludeAppId) continue;\r\n      \r\n      if (iframe.contentWindow) {\r\n        iframe.contentWindow.postMessage({\r\n          type: 'fdc3.context',\r\n          context\r\n        }, '*');\r\n        \r\n        // Log to monitor\r\n        fdc3Monitor.logMessage({\r\n          direction: 'sent',\r\n          type: 'context',\r\n          to: appId,\r\n          payload: context\r\n        });\r\n      }\r\n    }\r\n  }\r\n  \r\n  private async routeMessage(\r\n    type: string,\r\n    payload: any,\r\n    messageId: string,\r\n    appId: string,\r\n    source: Window\r\n  ): Promise<void> {\r\n    try {\r\n      let result: any;\r\n      \r\n      switch (type) {\r\n        case 'broadcast':\r\n          await this.handleBroadcast(appId, payload.context);\r\n          result = { success: true };\r\n          break;\r\n          \r\n        case 'raiseIntent':\r\n          result = await this.handleRaiseIntent(appId, payload.intent, payload.context, payload.app);\r\n          break;\r\n          \r\n        case 'addContextListener':\r\n          result = await this.handleAddContextListener(appId, payload.contextType, payload.listenerId);\r\n          break;\r\n          \r\n        case 'removeContextListener':\r\n          await this.handleRemoveContextListener(appId, payload.listenerId);\r\n          result = { success: true };\r\n          break;\r\n          \r\n        case 'joinUserChannel':\r\n          await this.handleJoinUserChannel(appId, payload.channelId);\r\n          result = { success: true };\r\n          break;\r\n          \r\n        case 'leaveCurrentChannel':\r\n          await this.handleLeaveCurrentChannel(appId);\r\n          result = { success: true };\r\n          break;\r\n          \r\n        case 'getUserChannels':\r\n          result = this.channelManager.getUserChannels();\r\n          break;\r\n          \r\n        case 'getChannel':\r\n          result = this.channelManager.getUserChannel(payload.channelId);\r\n          break;\r\n          \r\n        case 'getOrCreateChannel':\r\n          result = this.channelManager.getOrCreateAppChannel(payload.channelId);\r\n          break;\r\n          \r\n        default:\r\n          throw new Error(`Unknown message type: ${type}`);\r\n      }\r\n      \r\n      // Send response\r\n      this.sendResponse(source, messageId, result);\r\n      \r\n    } catch (error) {\r\n      console.error('[PostMessageRouter] Error handling message:', error);\r\n      this.sendError(source, messageId, error instanceof Error ? error.message : 'Unknown error');\r\n    }\r\n  }\r\n  \r\n  private async handleBroadcast(appId: string, context: Context): Promise<void> {\r\n    console.log('[PostMessageRouter] Broadcasting context from', appId, ':', context);\r\n    \r\n    // Get app's current channel\r\n    const channelId = this.appChannels.get(appId);\r\n    \r\n    if (channelId) {\r\n      // Broadcast on channel\r\n      const channel = this.channelManager.getUserChannel(channelId);\r\n      if (channel) {\r\n        await channel.broadcast(context);\r\n      }\r\n    } else {\r\n      // Broadcast to all apps not on a channel\r\n      await this.contextRouter.routeContext(context, appId);\r\n    }\r\n  }\r\n  \r\n  private async handleRaiseIntent(\r\n    appId: string,\r\n    intent: string,\r\n    context: Context,\r\n    targetApp?: any\r\n  ): Promise<any> {\r\n    console.log('[PostMessageRouter] Raising intent:', intent, 'from', appId);\r\n    \r\n    // Use intent resolver\r\n    const resolution = await this.intentResolver.resolveIntent(intent, context, targetApp);\r\n    return resolution;\r\n  }\r\n  \r\n  private async handleAddContextListener(\r\n    appId: string,\r\n    contextType: string | null,\r\n    listenerId: string\r\n  ): Promise<any> {\r\n    console.log('[PostMessageRouter] Adding context listener for', appId, ':', contextType);\r\n    \r\n    // Subscribe to context router\r\n    this.contextRouter.subscribe(appId, contextType, async (context: Context) => {\r\n      // Send context to app\r\n      const iframe = this.registeredApps.get(appId);\r\n      if (iframe && iframe.contentWindow) {\r\n        iframe.contentWindow.postMessage({\r\n          type: 'context',\r\n          payload: {\r\n            listenerId,\r\n            context\r\n          }\r\n        }, '*');\r\n      }\r\n    });\r\n    \r\n    return { success: true };\r\n  }\r\n  \r\n  private async handleRemoveContextListener(appId: string, listenerId: string): Promise<void> {\r\n    console.log('[PostMessageRouter] Removing context listener:', listenerId);\r\n    // Context router handles this via listener.unsubscribe()\r\n  }\r\n  \r\n  private async handleJoinUserChannel(appId: string, channelId: string): Promise<void> {\r\n    console.log('[PostMessageRouter] App', appId, 'joining channel:', channelId);\r\n    \r\n    // Leave current channel if any\r\n    const currentChannel = this.appChannels.get(appId);\r\n    if (currentChannel) {\r\n      await this.handleLeaveCurrentChannel(appId);\r\n    }\r\n    \r\n    // Join new channel\r\n    this.appChannels.set(appId, channelId);\r\n    \r\n    // Subscribe to channel contexts\r\n    const channel = this.channelManager.getUserChannel(channelId);\r\n    if (channel) {\r\n      channel.addContextListener(null, async (context: Context) => {\r\n        // Send to app\r\n        const iframe = this.registeredApps.get(appId);\r\n        if (iframe && iframe.contentWindow) {\r\n          iframe.contentWindow.postMessage({\r\n            type: 'context',\r\n            payload: { context }\r\n          }, '*');\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  private async handleLeaveCurrentChannel(appId: string): Promise<void> {\r\n    console.log('[PostMessageRouter] App', appId, 'leaving channel');\r\n    this.appChannels.delete(appId);\r\n  }\r\n  \r\n  private sendResponse(target: Window, messageId: string, payload: any): void {\r\n    target.postMessage({\r\n      type: 'response',\r\n      messageId,\r\n      payload\r\n    }, '*');\r\n  }\r\n  \r\n  private sendError(target: Window, messageId: string, error: string): void {\r\n    target.postMessage({\r\n      type: 'response',\r\n      messageId,\r\n      error\r\n    }, '*');\r\n  }\r\n  \r\n  registerApplication(appId: string, iframe: HTMLIFrameElement): void {\r\n    console.log('[PostMessageRouter] Registering app:', appId);\r\n    this.registeredApps.set(appId, iframe);\r\n  }\r\n  \r\n  unregisterApplication(appId: string): void {\r\n    console.log('[PostMessageRouter] Unregistering app:', appId);\r\n    this.registeredApps.delete(appId);\r\n    this.appChannels.delete(appId);\r\n    this.contextRouter.unsubscribeApp(appId);\r\n  }\r\n  \r\n  sendToApplication(appId: string, message: BridgeMessage): void {\r\n    const iframe = this.registeredApps.get(appId);\r\n    if (!iframe || !iframe.contentWindow) {\r\n      console.warn('[PostMessageRouter] App not found:', appId);\r\n      return;\r\n    }\r\n    \r\n    iframe.contentWindow.postMessage(message, '*');\r\n  }\r\n  \r\n  broadcast(message: BridgeMessage, excludeAppId?: string): void {\r\n    for (const [appId, iframe] of this.registeredApps.entries()) {\r\n      if (appId === excludeAppId) continue;\r\n      \r\n      if (iframe.contentWindow) {\r\n        iframe.contentWindow.postMessage(message, '*');\r\n      }\r\n    }\r\n  }\r\n  \r\n  getChannelManager(): ChannelManager {\r\n    return this.channelManager;\r\n  }\r\n  \r\n  getIntentResolver(): IntentResolver {\r\n    return this.intentResolver;\r\n  }\r\n  \r\n  getContextRouter(): ContextRouter {\r\n    return this.contextRouter;\r\n  }\r\n}\r\n","/**\r\n * Web Workspace Manager\r\n * Manages workspace persistence using browser storage\r\n */\r\n\r\nimport { Workspace, WorkspaceConfig } from '../types';\r\nimport { StorageManager } from '../storage/StorageManager';\r\n\r\nexport class WebWorkspaceManager {\r\n  private currentWorkspace: Workspace | null = null;\r\n  private storage: StorageManager;\r\n  private autoSaveInterval: number | null = null;\r\n  \r\n  constructor(storage: StorageManager) {\r\n    this.storage = storage;\r\n  }\r\n  \r\n  async saveWorkspace(name: string, config?: WorkspaceConfig): Promise<Workspace> {\r\n    console.log('[WebWorkspaceManager] Saving workspace:', name);\r\n    \r\n    const workspace: Workspace = {\r\n      id: this.generateWorkspaceId(),\r\n      name,\r\n      config: config || this.captureCurrentState(),\r\n      createdAt: new Date(),\r\n      updatedAt: new Date()\r\n    };\r\n    \r\n    await this.storage.set(workspace.id, workspace, 'workspaces');\r\n    this.currentWorkspace = workspace;\r\n    \r\n    return workspace;\r\n  }\r\n  \r\n  async loadWorkspace(workspaceId: string): Promise<void> {\r\n    console.log('[WebWorkspaceManager] Loading workspace:', workspaceId);\r\n    \r\n    const workspace = await this.storage.get(workspaceId, 'workspaces');\r\n    if (!workspace) {\r\n      throw new Error(`Workspace not found: ${workspaceId}`);\r\n    }\r\n    \r\n    this.currentWorkspace = workspace;\r\n    \r\n    // TODO: Restore applications from workspace config\r\n    // This would be handled by WebPlatformCore\r\n  }\r\n  \r\n  async getWorkspaces(): Promise<Workspace[]> {\r\n    const keys = await this.storage.keys('workspaces');\r\n    const workspaces: Workspace[] = [];\r\n    \r\n    for (const key of keys) {\r\n      const workspace = await this.storage.get(key, 'workspaces');\r\n      if (workspace) {\r\n        workspaces.push(workspace);\r\n      }\r\n    }\r\n    \r\n    return workspaces.sort((a, b) => \r\n      new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime()\r\n    );\r\n  }\r\n  \r\n  async deleteWorkspace(workspaceId: string): Promise<void> {\r\n    console.log('[WebWorkspaceManager] Deleting workspace:', workspaceId);\r\n    await this.storage.delete(workspaceId, 'workspaces');\r\n    \r\n    if (this.currentWorkspace?.id === workspaceId) {\r\n      this.currentWorkspace = null;\r\n    }\r\n  }\r\n  \r\n  getCurrentWorkspace(): Workspace | null {\r\n    return this.currentWorkspace;\r\n  }\r\n  \r\n  captureCurrentState(): WorkspaceConfig {\r\n    // This will be populated by WebPlatformCore with actual window states\r\n    return {\r\n      applications: [],\r\n      layout: { type: 'free' }\r\n    };\r\n  }\r\n  \r\n  async exportWorkspace(workspaceId: string): Promise<string> {\r\n    const workspace = await this.storage.get(workspaceId, 'workspaces');\r\n    if (!workspace) {\r\n      throw new Error(`Workspace not found: ${workspaceId}`);\r\n    }\r\n    \r\n    return JSON.stringify(workspace, null, 2);\r\n  }\r\n  \r\n  async importWorkspace(json: string): Promise<Workspace> {\r\n    const workspace = JSON.parse(json);\r\n    workspace.id = this.generateWorkspaceId(); // New ID\r\n    workspace.createdAt = new Date();\r\n    workspace.updatedAt = new Date();\r\n    \r\n    await this.storage.set(workspace.id, workspace, 'workspaces');\r\n    return workspace;\r\n  }\r\n  \r\n  generateShareableURL(workspaceId: string): string {\r\n    const baseUrl = window.location.origin + window.location.pathname;\r\n    return `${baseUrl}?workspace=${workspaceId}`;\r\n  }\r\n  \r\n  enableAutoSave(interval: number = 30000): void {\r\n    if (this.autoSaveInterval) {\r\n      clearInterval(this.autoSaveInterval);\r\n    }\r\n    \r\n    this.autoSaveInterval = window.setInterval(async () => {\r\n      if (this.currentWorkspace) {\r\n        console.log('[WebWorkspaceManager] Auto-saving workspace');\r\n        await this.saveWorkspace(this.currentWorkspace.name);\r\n      }\r\n    }, interval);\r\n  }\r\n  \r\n  disableAutoSave(): void {\r\n    if (this.autoSaveInterval) {\r\n      clearInterval(this.autoSaveInterval);\r\n      this.autoSaveInterval = null;\r\n    }\r\n  }\r\n  \r\n  private generateWorkspaceId(): string {\r\n    return `workspace-${Date.now()}-${Math.random().toString(36).substring(7)}`;\r\n  }\r\n}\r\n","/**\r\n * Web Platform Core\r\n * Main orchestrator for the browser-based platform\r\n */\r\n\r\nimport { PlatformConfig, WindowConfig } from '../types';\r\nimport { BrowserWindowManager } from './BrowserWindowManager';\r\nimport { PostMessageRouter } from './PostMessageRouter';\r\nimport { WebWorkspaceManager } from './WebWorkspaceManager';\r\nimport { StorageManager } from '../storage/StorageManager';\r\n\r\n// Define Context type locally to avoid import issues\r\ntype Context = {\r\n  type: string;\r\n  [key: string]: any;\r\n};\r\n\r\nexport class WebPlatformCore {\r\n  private config: PlatformConfig | null = null;\r\n  private initialized: boolean = false;\r\n  private windowManager: BrowserWindowManager | null = null;\r\n  private messageRouter: PostMessageRouter | null = null;\r\n  private workspaceManager: WebWorkspaceManager | null = null;\r\n  private storage: StorageManager;\r\n  private appDirectory: Map<string, any> = new Map();\r\n  \r\n  constructor(storage: StorageManager) {\r\n    this.storage = storage;\r\n  }\r\n  \r\n  async initialize(config: PlatformConfig): Promise<void> {\r\n    console.log('[WebPlatformCore] Initializing with config:', config);\r\n    \r\n    this.config = config;\r\n    \r\n    // Initialize services\r\n    this.windowManager = new BrowserWindowManager();\r\n    this.messageRouter = new PostMessageRouter();\r\n    this.workspaceManager = new WebWorkspaceManager(this.storage);\r\n    \r\n    // Load application directory\r\n    await this.loadApplicationDirectory(config.appDirectory);\r\n    \r\n    // Load saved external apps\r\n    await this.loadSavedApps();\r\n    \r\n    // Load default workspace if specified\r\n    if (config.defaultWorkspace) {\r\n      try {\r\n        await this.workspaceManager.loadWorkspace(config.defaultWorkspace);\r\n      } catch (error) {\r\n        console.warn('[WebPlatformCore] Failed to load default workspace:', error);\r\n      }\r\n    }\r\n    \r\n    this.initialized = true;\r\n    console.log('[WebPlatformCore] Initialized successfully');\r\n  }\r\n  \r\n  async shutdown(): Promise<void> {\r\n    console.log('[WebPlatformCore] Shutting down...');\r\n    \r\n    // Close all windows\r\n    if (this.windowManager) {\r\n      const windows = this.windowManager.getAllWindows();\r\n      for (const window of windows) {\r\n        window.close();\r\n      }\r\n    }\r\n    \r\n    this.initialized = false;\r\n  }\r\n  \r\n  isInitialized(): boolean {\r\n    return this.initialized;\r\n  }\r\n  \r\n  /**\r\n   * Load application directory\r\n   */\r\n  private async loadApplicationDirectory(url: string): Promise<void> {\r\n    try {\r\n      console.log('[WebPlatformCore] Loading app directory from:', url);\r\n      \r\n      const response = await fetch(url);\r\n      const directory = await response.json();\r\n      \r\n      if (Array.isArray(directory.applications)) {\r\n        for (const app of directory.applications) {\r\n          this.appDirectory.set(app.appId, app);\r\n        }\r\n        console.log('[WebPlatformCore] Loaded', this.appDirectory.size, 'applications');\r\n      }\r\n    } catch (error) {\r\n      console.error('[WebPlatformCore] Failed to load app directory:', error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Launch an application\r\n   */\r\n  async launchApplication(appId: string, context?: Context): Promise<any> {\r\n    if (!this.windowManager || !this.messageRouter) {\r\n      throw new Error('Platform not initialized');\r\n    }\r\n    \r\n    console.log('[WebPlatformCore] Launching application:', appId);\r\n    \r\n    const appManifest = this.appDirectory.get(appId);\r\n    if (!appManifest) {\r\n      throw new Error(`Application not found: ${appId}`);\r\n    }\r\n    \r\n    // Prepare URL with platform parameters\r\n    const url = new URL(appManifest.url, window.location.origin);\r\n    url.searchParams.set('platformOrigin', window.location.origin);\r\n    url.searchParams.set('appId', appId);\r\n    \r\n    // Create window config\r\n    const windowConfig: WindowConfig = {\r\n      appId,\r\n      url: url.toString(),\r\n      title: appManifest.title || appManifest.name,\r\n      position: appManifest.window?.defaultPosition,\r\n      size: appManifest.window?.defaultSize || { width: 800, height: 600 },\r\n      minSize: appManifest.window?.minSize,\r\n      maxSize: appManifest.window?.maxSize,\r\n      resizable: appManifest.window?.resizable !== false,\r\n      movable: appManifest.window?.movable !== false,\r\n      frame: appManifest.window?.frame !== false,\r\n      sandbox: appManifest.sandbox\r\n    };\r\n    \r\n    // Create window\r\n    const windowInstance = this.windowManager.createWindow(windowConfig);\r\n    \r\n    // Register with message router\r\n    this.messageRouter.registerApplication(appId, windowInstance.iframe);\r\n    \r\n    // Send initial context if provided\r\n    if (context) {\r\n      setTimeout(() => {\r\n        this.messageRouter?.sendToApplication(appId, {\r\n          type: 'broadcast',\r\n          payload: { context },\r\n          messageId: 'init',\r\n          timestamp: Date.now()\r\n        });\r\n      }, 1000); // Wait for iframe to load\r\n    }\r\n    \r\n    return {\r\n      appId,\r\n      instanceId: windowInstance.id\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Close an application\r\n   */\r\n  async closeApplication(instanceId: string): Promise<void> {\r\n    if (!this.windowManager || !this.messageRouter) {\r\n      throw new Error('Platform not initialized');\r\n    }\r\n    \r\n    console.log('[WebPlatformCore] Closing application:', instanceId);\r\n    \r\n    const window = this.windowManager.getWindow(instanceId);\r\n    if (window) {\r\n      this.messageRouter.unregisterApplication(window.appId);\r\n      this.windowManager.destroyWindow(instanceId);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Get running applications\r\n   */\r\n  getRunningApplications(): any[] {\r\n    if (!this.windowManager) {\r\n      return [];\r\n    }\r\n    \r\n    return this.windowManager.getAllWindows().map(w => ({\r\n      appId: w.appId,\r\n      instanceId: w.id,\r\n      state: w.state\r\n    }));\r\n  }\r\n  \r\n  /**\r\n   * Broadcast context\r\n   */\r\n  async broadcast(context: Context, channelId?: string): Promise<void> {\r\n    if (!this.messageRouter) {\r\n      throw new Error('Platform not initialized');\r\n    }\r\n    \r\n    // This would be handled by the message router\r\n    console.log('[WebPlatformCore] Broadcasting context:', context);\r\n  }\r\n  \r\n  /**\r\n   * Save current workspace\r\n   */\r\n  async saveWorkspace(name: string): Promise<any> {\r\n    if (!this.workspaceManager) {\r\n      throw new Error('Platform not initialized');\r\n    }\r\n    \r\n    return await this.workspaceManager.saveWorkspace(name);\r\n  }\r\n  \r\n  /**\r\n   * Load workspace\r\n   */\r\n  async loadWorkspace(workspaceId: string): Promise<void> {\r\n    if (!this.workspaceManager) {\r\n      throw new Error('Platform not initialized');\r\n    }\r\n    \r\n    await this.workspaceManager.loadWorkspace(workspaceId);\r\n  }\r\n  \r\n  /**\r\n   * Get all workspaces\r\n   */\r\n  async getWorkspaces(): Promise<any[]> {\r\n    if (!this.workspaceManager) {\r\n      throw new Error('Platform not initialized');\r\n    }\r\n    \r\n    return await this.workspaceManager.getWorkspaces();\r\n  }\r\n  \r\n  /**\r\n   * Get application directory\r\n   */\r\n  getApplicationDirectory(): any[] {\r\n    return Array.from(this.appDirectory.values());\r\n  }\r\n  \r\n  /**\r\n   * Add external app to directory\r\n   */\r\n  addExternalApp(app: { name: string; url: string; icon?: string; description?: string }): void {\r\n    const appId = `external-${Date.now()}-${Math.random().toString(36).substring(7)}`;\r\n    \r\n    const appManifest = {\r\n      appId,\r\n      name: app.name,\r\n      title: app.name,\r\n      description: app.description || 'External web application',\r\n      url: app.url,\r\n      icon: app.icon || '🌐',\r\n      window: {\r\n        defaultSize: { width: 1000, height: 700 },\r\n        minSize: { width: 400, height: 300 }\r\n      },\r\n      external: true\r\n    };\r\n    \r\n    this.appDirectory.set(appId, appManifest);\r\n    \r\n    // Save to storage for persistence\r\n    this.saveAppDirectory();\r\n    \r\n    console.log('[WebPlatformCore] Added external app:', appId, app.name);\r\n  }\r\n  \r\n  /**\r\n   * Remove app from directory\r\n   */\r\n  removeApp(appId: string): void {\r\n    this.appDirectory.delete(appId);\r\n    this.saveAppDirectory();\r\n    console.log('[WebPlatformCore] Removed app:', appId);\r\n  }\r\n  \r\n  /**\r\n   * Save app directory to storage\r\n   */\r\n  private async saveAppDirectory(): Promise<void> {\r\n    try {\r\n      const apps = Array.from(this.appDirectory.values());\r\n      await this.storage.set('appDirectory', apps);\r\n    } catch (error) {\r\n      console.error('[WebPlatformCore] Failed to save app directory:', error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Load saved apps from storage\r\n   */\r\n  private async loadSavedApps(): Promise<void> {\r\n    try {\r\n      const savedApps = await this.storage.get('appDirectory');\r\n      if (Array.isArray(savedApps)) {\r\n        savedApps.forEach(app => {\r\n          if (app.external) {\r\n            this.appDirectory.set(app.appId, app);\r\n          }\r\n        });\r\n        console.log('[WebPlatformCore] Loaded', savedApps.length, 'saved apps');\r\n      }\r\n    } catch (error) {\r\n      console.error('[WebPlatformCore] Failed to load saved apps:', error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Get window manager\r\n   */\r\n  getWindowManager(): BrowserWindowManager | null {\r\n    return this.windowManager;\r\n  }\r\n  \r\n  /**\r\n   * Get message router\r\n   */\r\n  getMessageRouter(): PostMessageRouter | null {\r\n    return this.messageRouter;\r\n  }\r\n  \r\n  /**\r\n   * Get workspace manager\r\n   */\r\n  getWorkspaceManager(): WebWorkspaceManager | null {\r\n    return this.workspaceManager;\r\n  }\r\n}\r\n","/**\r\n * Storage Manager\r\n * Unified storage API with IndexedDB primary and localStorage fallback\r\n */\r\n\r\nexport interface StorageUsage {\r\n  used: number;\r\n  quota: number;\r\n  percentage: number;\r\n}\r\n\r\nexport class StorageManager {\r\n  private db: IDBDatabase | null = null;\r\n  private dbName: string = 'openfin-web-platform';\r\n  private dbVersion: number = 1;\r\n  private useLocalStorage: boolean = false;\r\n  \r\n  async initialize(): Promise<void> {\r\n    try {\r\n      this.db = await this.openIndexedDB();\r\n      console.log('[StorageManager] Using IndexedDB');\r\n    } catch (error) {\r\n      console.warn('[StorageManager] IndexedDB unavailable, falling back to localStorage:', error);\r\n      this.useLocalStorage = true;\r\n    }\r\n  }\r\n  \r\n  private openIndexedDB(): Promise<IDBDatabase> {\r\n    return new Promise((resolve, reject) => {\r\n      if (!('indexedDB' in window)) {\r\n        reject(new Error('IndexedDB not supported'));\r\n        return;\r\n      }\r\n      \r\n      const request = indexedDB.open(this.dbName, this.dbVersion);\r\n      \r\n      request.onerror = () => reject(request.error);\r\n      request.onsuccess = () => resolve(request.result);\r\n      \r\n      request.onupgradeneeded = (event) => {\r\n        const db = (event.target as IDBOpenDBRequest).result;\r\n        \r\n        // Create object stores\r\n        if (!db.objectStoreNames.contains('workspaces')) {\r\n          db.createObjectStore('workspaces', { keyPath: 'id' });\r\n        }\r\n        \r\n        if (!db.objectStoreNames.contains('settings')) {\r\n          db.createObjectStore('settings');\r\n        }\r\n      };\r\n    });\r\n  }\r\n  \r\n  async set(key: string, value: any, store: string = 'settings'): Promise<void> {\r\n    if (this.useLocalStorage) {\r\n      localStorage.setItem(`${store}:${key}`, JSON.stringify(value));\r\n      return;\r\n    }\r\n    \r\n    if (!this.db) throw new Error('Storage not initialized');\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      const tx = this.db!.transaction([store], 'readwrite');\r\n      const objectStore = tx.objectStore(store);\r\n      const request = objectStore.put(value, key);\r\n      \r\n      request.onsuccess = () => resolve();\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n  \r\n  async get(key: string, store: string = 'settings'): Promise<any> {\r\n    if (this.useLocalStorage) {\r\n      const item = localStorage.getItem(`${store}:${key}`);\r\n      return item ? JSON.parse(item) : null;\r\n    }\r\n    \r\n    if (!this.db) throw new Error('Storage not initialized');\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      const tx = this.db!.transaction([store], 'readonly');\r\n      const objectStore = tx.objectStore(store);\r\n      const request = objectStore.get(key);\r\n      \r\n      request.onsuccess = () => resolve(request.result);\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n  \r\n  async delete(key: string, store: string = 'settings'): Promise<void> {\r\n    if (this.useLocalStorage) {\r\n      localStorage.removeItem(`${store}:${key}`);\r\n      return;\r\n    }\r\n    \r\n    if (!this.db) throw new Error('Storage not initialized');\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      const tx = this.db!.transaction([store], 'readwrite');\r\n      const objectStore = tx.objectStore(store);\r\n      const request = objectStore.delete(key);\r\n      \r\n      request.onsuccess = () => resolve();\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n  \r\n  async keys(store: string = 'settings'): Promise<string[]> {\r\n    if (this.useLocalStorage) {\r\n      const prefix = `${store}:`;\r\n      return Object.keys(localStorage)\r\n        .filter(k => k.startsWith(prefix))\r\n        .map(k => k.substring(prefix.length));\r\n    }\r\n    \r\n    if (!this.db) throw new Error('Storage not initialized');\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      const tx = this.db!.transaction([store], 'readonly');\r\n      const objectStore = tx.objectStore(store);\r\n      const request = objectStore.getAllKeys();\r\n      \r\n      request.onsuccess = () => resolve(request.result as string[]);\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n  \r\n  async clear(store: string = 'settings'): Promise<void> {\r\n    if (this.useLocalStorage) {\r\n      const prefix = `${store}:`;\r\n      const keysToRemove = Object.keys(localStorage).filter(k => k.startsWith(prefix));\r\n      keysToRemove.forEach(k => localStorage.removeItem(k));\r\n      return;\r\n    }\r\n    \r\n    if (!this.db) throw new Error('Storage not initialized');\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      const tx = this.db!.transaction([store], 'readwrite');\r\n      const objectStore = tx.objectStore(store);\r\n      const request = objectStore.clear();\r\n      \r\n      request.onsuccess = () => resolve();\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n  \r\n  async getUsage(): Promise<StorageUsage> {\r\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\r\n      const estimate = await navigator.storage.estimate();\r\n      return {\r\n        used: estimate.usage || 0,\r\n        quota: estimate.quota || 0,\r\n        percentage: estimate.quota ? ((estimate.usage || 0) / estimate.quota) * 100 : 0\r\n      };\r\n    }\r\n    \r\n    // Fallback for browsers without storage API\r\n    return {\r\n      used: 0,\r\n      quota: 5 * 1024 * 1024, // Assume 5MB\r\n      percentage: 0\r\n    };\r\n  }\r\n  \r\n  async exportAll(): Promise<string> {\r\n    const data: any = {\r\n      workspaces: {},\r\n      settings: {}\r\n    };\r\n    \r\n    // Export workspaces\r\n    const workspaceKeys = await this.keys('workspaces');\r\n    for (const key of workspaceKeys) {\r\n      data.workspaces[key] = await this.get(key, 'workspaces');\r\n    }\r\n    \r\n    // Export settings\r\n    const settingKeys = await this.keys('settings');\r\n    for (const key of settingKeys) {\r\n      data.settings[key] = await this.get(key, 'settings');\r\n    }\r\n    \r\n    return JSON.stringify(data, null, 2);\r\n  }\r\n  \r\n  async importAll(jsonData: string): Promise<void> {\r\n    const data = JSON.parse(jsonData);\r\n    \r\n    // Import workspaces\r\n    if (data.workspaces) {\r\n      for (const [key, value] of Object.entries(data.workspaces)) {\r\n        await this.set(key, value, 'workspaces');\r\n      }\r\n    }\r\n    \r\n    // Import settings\r\n    if (data.settings) {\r\n      for (const [key, value] of Object.entries(data.settings)) {\r\n        await this.set(key, value, 'settings');\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Platform Detection Utilities\r\n * Detects which platform the application is running on\r\n */\r\n\r\nexport type PlatformType = 'desktop' | 'web' | 'standalone';\r\n\r\nexport interface PlatformCapabilities {\r\n  hasDesktopAPI: boolean;\r\n  hasWebPlatform: boolean;\r\n  hasFDC3: boolean;\r\n  hasServiceWorker: boolean;\r\n  hasIndexedDB: boolean;\r\n  hasLocalStorage: boolean;\r\n  hasWebCrypto: boolean;\r\n  hasSharedWorker: boolean;\r\n  hasBroadcastChannel: boolean;\r\n  isMobile: boolean;\r\n  isTablet: boolean;\r\n  browserName: string;\r\n  browserVersion: string;\r\n}\r\n\r\n/**\r\n * Detect which platform the application is running on\r\n */\r\nexport function detectPlatform(): PlatformType {\r\n  // Check for desktop platform (Electron/OpenFin)\r\n  if (typeof (window as any).fin !== 'undefined') {\r\n    return 'desktop';\r\n  }\r\n  \r\n  // Check for web platform (iframe with FDC3 bridge)\r\n  if (window.parent !== window && typeof (window as any).fdc3 !== 'undefined') {\r\n    return 'web';\r\n  }\r\n  \r\n  // Standalone (no platform)\r\n  return 'standalone';\r\n}\r\n\r\n/**\r\n * Detect browser capabilities\r\n */\r\nexport function detectCapabilities(): PlatformCapabilities {\r\n  const ua = navigator.userAgent;\r\n  \r\n  return {\r\n    hasDesktopAPI: typeof (window as any).fin !== 'undefined',\r\n    hasWebPlatform: window.parent !== window,\r\n    hasFDC3: typeof (window as any).fdc3 !== 'undefined',\r\n    hasServiceWorker: 'serviceWorker' in navigator,\r\n    hasIndexedDB: 'indexedDB' in window,\r\n    hasLocalStorage: typeof localStorage !== 'undefined',\r\n    hasWebCrypto: 'crypto' in window && 'subtle' in window.crypto,\r\n    hasSharedWorker: typeof SharedWorker !== 'undefined',\r\n    hasBroadcastChannel: typeof BroadcastChannel !== 'undefined',\r\n    isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(ua),\r\n    isTablet: /iPad|Android/i.test(ua) && !/Mobile/i.test(ua),\r\n    browserName: detectBrowserName(),\r\n    browserVersion: detectBrowserVersion()\r\n  };\r\n}\r\n\r\n/**\r\n * Get unified FDC3 accessor\r\n */\r\nexport function getFDC3(): any {\r\n  const platform = detectPlatform();\r\n  \r\n  if (platform === 'desktop') {\r\n    // Desktop: window.fin.desktop.fdc3 or window.fdc3\r\n    return (window as any).fin?.desktop?.fdc3 || (window as any).fdc3;\r\n  } else if (platform === 'web') {\r\n    // Web: window.fdc3 (injected by bridge)\r\n    return (window as any).fdc3;\r\n  }\r\n  \r\n  return null;\r\n}\r\n\r\n/**\r\n * Check if a specific capability is supported\r\n */\r\nexport function isCapabilitySupported(capability: keyof PlatformCapabilities): boolean {\r\n  const capabilities = detectCapabilities();\r\n  return capabilities[capability] as boolean;\r\n}\r\n\r\n/**\r\n * Get missing capabilities for the current browser\r\n */\r\nexport function getMissingCapabilities(): string[] {\r\n  const capabilities = detectCapabilities();\r\n  const missing: string[] = [];\r\n  \r\n  const requiredCapabilities: (keyof PlatformCapabilities)[] = [\r\n    'hasIndexedDB',\r\n    'hasLocalStorage'\r\n  ];\r\n  \r\n  const recommendedCapabilities: (keyof PlatformCapabilities)[] = [\r\n    'hasServiceWorker',\r\n    'hasWebCrypto',\r\n    'hasBroadcastChannel'\r\n  ];\r\n  \r\n  for (const cap of requiredCapabilities) {\r\n    if (!capabilities[cap]) {\r\n      missing.push(`${cap} (required)`);\r\n    }\r\n  }\r\n  \r\n  for (const cap of recommendedCapabilities) {\r\n    if (!capabilities[cap]) {\r\n      missing.push(`${cap} (recommended)`);\r\n    }\r\n  }\r\n  \r\n  return missing;\r\n}\r\n\r\n/**\r\n * Check if the browser is supported\r\n */\r\nexport function isBrowserSupported(): boolean {\r\n  const capabilities = detectCapabilities();\r\n  \r\n  // Minimum requirements\r\n  return capabilities.hasIndexedDB && capabilities.hasLocalStorage;\r\n}\r\n\r\n/**\r\n * Get compatibility report\r\n */\r\nexport function getCompatibilityReport(): {\r\n  supported: boolean;\r\n  platform: PlatformType;\r\n  capabilities: PlatformCapabilities;\r\n  missing: string[];\r\n  warnings: string[];\r\n} {\r\n  const platform = detectPlatform();\r\n  const capabilities = detectCapabilities();\r\n  const missing = getMissingCapabilities();\r\n  const warnings: string[] = [];\r\n  \r\n  if (capabilities.isMobile) {\r\n    warnings.push('Mobile browsers have limited window management capabilities');\r\n  }\r\n  \r\n  if (!capabilities.hasServiceWorker) {\r\n    warnings.push('Offline support unavailable without Service Worker');\r\n  }\r\n  \r\n  if (!capabilities.hasWebCrypto) {\r\n    warnings.push('Data encryption unavailable without Web Crypto API');\r\n  }\r\n  \r\n  return {\r\n    supported: isBrowserSupported(),\r\n    platform,\r\n    capabilities,\r\n    missing,\r\n    warnings\r\n  };\r\n}\r\n\r\n/**\r\n * Detect browser name\r\n */\r\nfunction detectBrowserName(): string {\r\n  const ua = navigator.userAgent;\r\n  \r\n  if (ua.includes('Firefox')) return 'Firefox';\r\n  if (ua.includes('Edg')) return 'Edge';\r\n  if (ua.includes('Chrome')) return 'Chrome';\r\n  if (ua.includes('Safari') && !ua.includes('Chrome')) return 'Safari';\r\n  if (ua.includes('Opera') || ua.includes('OPR')) return 'Opera';\r\n  \r\n  return 'Unknown';\r\n}\r\n\r\n/**\r\n * Detect browser version\r\n */\r\nfunction detectBrowserVersion(): string {\r\n  const ua = navigator.userAgent;\r\n  let match;\r\n  \r\n  if ((match = ua.match(/Firefox\\/(\\d+)/))) return match[1];\r\n  if ((match = ua.match(/Edg\\/(\\d+)/))) return match[1];\r\n  if ((match = ua.match(/Chrome\\/(\\d+)/))) return match[1];\r\n  if ((match = ua.match(/Version\\/(\\d+).*Safari/))) return match[1];\r\n  if ((match = ua.match(/Opera\\/(\\d+)/)) || (match = ua.match(/OPR\\/(\\d+)/))) return match[1];\r\n  \r\n  return 'Unknown';\r\n}\r\n\r\n/**\r\n * Display compatibility warning if needed\r\n */\r\nexport function displayCompatibilityWarning(): void {\r\n  const report = getCompatibilityReport();\r\n  \r\n  if (!report.supported) {\r\n    console.error('[Platform] Browser not supported!', report);\r\n    \r\n    const message = `\r\n      Your browser is not supported.\r\n      \r\n      Missing capabilities:\r\n      ${report.missing.join('\\n')}\r\n      \r\n      Please use a modern browser like Chrome, Firefox, or Edge.\r\n    `;\r\n    \r\n    alert(message);\r\n  } else if (report.warnings.length > 0) {\r\n    console.warn('[Platform] Compatibility warnings:', report.warnings);\r\n  }\r\n}\r\n","/**\r\n * FDC3 Monitor UI\r\n * Visual component for displaying FDC3 messages\r\n */\r\n\r\nimport { fdc3Monitor, FDC3Message } from './FDC3Monitor';\r\n\r\nexport class FDC3MonitorUI {\r\n  private container: HTMLElement | null = null;\r\n  private unsubscribe: (() => void) | null = null;\r\n  private isVisible: boolean = false;\r\n\r\n  show(): void {\r\n    if (this.isVisible) return;\r\n\r\n    this.isVisible = true;\r\n    this.createUI();\r\n    fdc3Monitor.enable();\r\n    \r\n    // Subscribe to updates\r\n    this.unsubscribe = fdc3Monitor.subscribe((messages) => {\r\n      this.updateMessages(messages);\r\n    });\r\n\r\n    // Initial render\r\n    this.updateMessages(fdc3Monitor.getMessages());\r\n  }\r\n\r\n  hide(): void {\r\n    if (!this.isVisible) return;\r\n\r\n    this.isVisible = false;\r\n    \r\n    if (this.unsubscribe) {\r\n      this.unsubscribe();\r\n      this.unsubscribe = null;\r\n    }\r\n\r\n    if (this.container) {\r\n      this.container.remove();\r\n      this.container = null;\r\n    }\r\n  }\r\n\r\n  toggle(): void {\r\n    if (this.isVisible) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  private createUI(): void {\r\n    this.container = document.createElement('div');\r\n    this.container.id = 'fdc3-monitor';\r\n    this.container.style.cssText = `\r\n      position: fixed;\r\n      bottom: 0;\r\n      right: 0;\r\n      width: 400px;\r\n      height: 300px;\r\n      background: rgba(0, 0, 0, 0.95);\r\n      border: 1px solid #333;\r\n      border-radius: 8px 0 0 0;\r\n      display: flex;\r\n      flex-direction: column;\r\n      z-index: 10000;\r\n      font-family: 'Courier New', monospace;\r\n      font-size: 12px;\r\n      color: #fff;\r\n      box-shadow: 0 -4px 12px rgba(0,0,0,0.3);\r\n    `;\r\n\r\n    this.container.innerHTML = `\r\n      <div style=\"padding: 8px 12px; background: #1a1a1a; border-bottom: 1px solid #333; display: flex; justify-content: space-between; align-items: center;\">\r\n        <div style=\"display: flex; align-items: center; gap: 8px;\">\r\n          <span style=\"color: #4ade80; font-weight: bold;\">●</span>\r\n          <span style=\"font-weight: bold;\">FDC3 Monitor</span>\r\n          <span id=\"fdc3-monitor-count\" style=\"color: #888; font-size: 11px;\">(0)</span>\r\n        </div>\r\n        <div style=\"display: flex; gap: 8px;\">\r\n          <button id=\"fdc3-monitor-clear\" style=\"background: #333; border: none; color: #fff; padding: 4px 8px; border-radius: 4px; cursor: pointer; font-size: 11px;\">Clear</button>\r\n          <button id=\"fdc3-monitor-export\" style=\"background: #333; border: none; color: #fff; padding: 4px 8px; border-radius: 4px; cursor: pointer; font-size: 11px;\">Export</button>\r\n          <button id=\"fdc3-monitor-close\" style=\"background: #333; border: none; color: #fff; padding: 4px 8px; border-radius: 4px; cursor: pointer; font-size: 11px;\">✕</button>\r\n        </div>\r\n      </div>\r\n      <div id=\"fdc3-monitor-messages\" style=\"flex: 1; overflow-y: auto; padding: 8px;\">\r\n        <div style=\"color: #666; text-align: center; padding: 20px;\">No messages yet...</div>\r\n      </div>\r\n      <div id=\"fdc3-monitor-stats\" style=\"padding: 6px 12px; background: #1a1a1a; border-top: 1px solid #333; font-size: 10px; color: #888;\">\r\n        Sent: <span id=\"fdc3-stats-sent\">0</span> | Received: <span id=\"fdc3-stats-received\">0</span>\r\n      </div>\r\n    `;\r\n\r\n    document.body.appendChild(this.container);\r\n\r\n    // Add event listeners\r\n    this.container.querySelector('#fdc3-monitor-clear')?.addEventListener('click', () => {\r\n      fdc3Monitor.clearMessages();\r\n    });\r\n\r\n    this.container.querySelector('#fdc3-monitor-export')?.addEventListener('click', () => {\r\n      const data = fdc3Monitor.exportMessages();\r\n      const blob = new Blob([data], { type: 'application/json' });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `fdc3-messages-${Date.now()}.json`;\r\n      a.click();\r\n      URL.revokeObjectURL(url);\r\n    });\r\n\r\n    this.container.querySelector('#fdc3-monitor-close')?.addEventListener('click', () => {\r\n      this.hide();\r\n    });\r\n\r\n    // Make draggable\r\n    this.makeDraggable();\r\n  }\r\n\r\n  private updateMessages(messages: FDC3Message[]): void {\r\n    if (!this.container) return;\r\n\r\n    const messagesEl = this.container.querySelector('#fdc3-monitor-messages');\r\n    const countEl = this.container.querySelector('#fdc3-monitor-count');\r\n    \r\n    if (!messagesEl || !countEl) return;\r\n\r\n    countEl.textContent = `(${messages.length})`;\r\n\r\n    if (messages.length === 0) {\r\n      messagesEl.innerHTML = '<div style=\"color: #666; text-align: center; padding: 20px;\">No messages yet...</div>';\r\n      return;\r\n    }\r\n\r\n    messagesEl.innerHTML = messages.map(msg => {\r\n      const time = new Date(msg.timestamp).toLocaleTimeString();\r\n      const directionColor = msg.direction === 'sent' ? '#3b82f6' : '#10b981';\r\n      const directionIcon = msg.direction === 'sent' ? '↑' : '↓';\r\n      \r\n      return `\r\n        <div style=\"margin-bottom: 8px; padding: 6px; background: #1a1a1a; border-left: 3px solid ${directionColor}; border-radius: 4px;\">\r\n          <div style=\"display: flex; justify-content: space-between; margin-bottom: 4px;\">\r\n            <span style=\"color: ${directionColor}; font-weight: bold;\">${directionIcon} ${msg.type}</span>\r\n            <span style=\"color: #666; font-size: 10px;\">${time}</span>\r\n          </div>\r\n          ${msg.from ? `<div style=\"color: #888; font-size: 10px;\">From: ${msg.from}</div>` : ''}\r\n          ${msg.to ? `<div style=\"color: #888; font-size: 10px;\">To: ${msg.to}</div>` : ''}\r\n          ${msg.channel ? `<div style=\"color: #888; font-size: 10px;\">Channel: ${msg.channel}</div>` : ''}\r\n          <div style=\"color: #aaa; font-size: 11px; margin-top: 4px; max-height: 60px; overflow: auto;\">\r\n            ${JSON.stringify(msg.payload, null, 2)}\r\n          </div>\r\n        </div>\r\n      `;\r\n    }).join('');\r\n\r\n    // Update stats\r\n    const stats = fdc3Monitor.getStats();\r\n    const sentEl = this.container.querySelector('#fdc3-stats-sent');\r\n    const receivedEl = this.container.querySelector('#fdc3-stats-received');\r\n    \r\n    if (sentEl) sentEl.textContent = stats.sent.toString();\r\n    if (receivedEl) receivedEl.textContent = stats.received.toString();\r\n  }\r\n\r\n  private makeDraggable(): void {\r\n    if (!this.container) return;\r\n\r\n    const header = this.container.querySelector('div') as HTMLElement;\r\n    if (!header) return;\r\n\r\n    let isDragging = false;\r\n    let startX = 0;\r\n    let startY = 0;\r\n    let startRight = 0;\r\n    let startBottom = 0;\r\n\r\n    header.style.cursor = 'move';\r\n\r\n    header.addEventListener('mousedown', (e) => {\r\n      if ((e.target as HTMLElement).tagName === 'BUTTON') return;\r\n      \r\n      isDragging = true;\r\n      startX = e.clientX;\r\n      startY = e.clientY;\r\n      \r\n      const rect = this.container!.getBoundingClientRect();\r\n      startRight = window.innerWidth - rect.right;\r\n      startBottom = window.innerHeight - rect.bottom;\r\n    });\r\n\r\n    document.addEventListener('mousemove', (e) => {\r\n      if (!isDragging || !this.container) return;\r\n\r\n      const deltaX = startX - e.clientX;\r\n      const deltaY = e.clientY - startY;\r\n\r\n      this.container.style.right = `${startRight + deltaX}px`;\r\n      this.container.style.bottom = `${startBottom - deltaY}px`;\r\n    });\r\n\r\n    document.addEventListener('mouseup', () => {\r\n      isDragging = false;\r\n    });\r\n  }\r\n}\r\n\r\n// Global singleton instance\r\nexport const fdc3MonitorUI = new FDC3MonitorUI();\r\n","/**\r\n * Web Platform Entry Point\r\n * Initializes the browser-based FDC3 interop platform with full UI\r\n */\r\n\r\nimport { WebPlatformCore } from './core/WebPlatformCore';\r\nimport { StorageManager } from './storage/StorageManager';\r\nimport { \r\n  detectPlatform, \r\n  getCompatibilityReport, \r\n  displayCompatibilityWarning \r\n} from './utils/platformDetection';\r\nimport { fdc3MonitorUI } from './diagnostics/FDC3MonitorUI';\r\n\r\nlet platform: WebPlatformCore;\r\nlet storage: StorageManager;\r\n\r\n// Initialize platform when DOM is ready\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n  console.log('[Web Platform] Initializing...');\r\n  \r\n  // Check browser compatibility\r\n  const compatReport = getCompatibilityReport();\r\n  console.log('[Web Platform] Compatibility Report:', compatReport);\r\n  \r\n  if (!compatReport.supported) {\r\n    displayCompatibilityWarning();\r\n    return;\r\n  }\r\n  \r\n  // Detect platform type\r\n  const platformType = detectPlatform();\r\n  console.log('[Web Platform] Platform Type:', platformType);\r\n  \r\n  try {\r\n    // Initialize storage\r\n    storage = new StorageManager();\r\n    await storage.initialize();\r\n    \r\n    // Initialize platform\r\n    platform = new WebPlatformCore(storage);\r\n    \r\n    await platform.initialize({\r\n      appDirectory: '/apps/directory.json',\r\n      theme: 'light',\r\n      enableMultiTab: false,\r\n      performanceMode: false\r\n    });\r\n    \r\n    // Make platform globally accessible\r\n    (window as any).platform = platform;\r\n    (window as any).platformType = platformType;\r\n    (window as any).platformCapabilities = compatReport.capabilities;\r\n    \r\n    // Hide loading indicator\r\n    const loading = document.getElementById('loading');\r\n    if (loading) {\r\n      loading.style.display = 'none';\r\n    }\r\n    \r\n    // Setup UI\r\n    setupUI();\r\n    \r\n    // Auto-launch demo apps in split-screen layout\r\n    await autoLaunchDemoApps();\r\n    \r\n    console.log('[Web Platform] Ready!');\r\n  } catch (error) {\r\n    console.error('[Web Platform] Initialization failed:', error);\r\n    \r\n    // Show error message\r\n    const loading = document.getElementById('loading');\r\n    if (loading) {\r\n      loading.innerHTML = `\r\n        <div style=\"color: #d32f2f;\">\r\n          <h2>Platform Failed to Load</h2>\r\n          <p>${error instanceof Error ? error.message : 'Unknown error'}</p>\r\n        </div>\r\n      `;\r\n    }\r\n  }\r\n});\r\n\r\nfunction setupUI() {\r\n  // Populate app grid\r\n  refreshAppGrid();\r\n  \r\n  // Setup channel selector\r\n  document.querySelectorAll('.channel-btn').forEach(btn => {\r\n    btn.addEventListener('click', async () => {\r\n      const channelId = btn.getAttribute('data-channel');\r\n      if (channelId) {\r\n        // Remove active from all\r\n        document.querySelectorAll('.channel-btn').forEach(b => b.classList.remove('active'));\r\n        // Add active to clicked\r\n        btn.classList.add('active');\r\n        \r\n        // TODO: Join channel for focused window\r\n        console.log('Switched to channel:', channelId);\r\n      }\r\n    });\r\n  });\r\n  \r\n  // Setup FDC3 Monitor toggle\r\n  document.getElementById('fdc3-monitor-toggle')?.addEventListener('click', () => {\r\n    fdc3MonitorUI.toggle();\r\n  });\r\n  \r\n  // Setup workspace actions\r\n  document.getElementById('save-workspace')?.addEventListener('click', async () => {\r\n    const name = prompt('Enter workspace name:');\r\n    if (name) {\r\n      try {\r\n        await platform.saveWorkspace(name);\r\n        alert(`Workspace \"${name}\" saved!`);\r\n      } catch (error) {\r\n        alert(`Failed to save workspace: ${error}`);\r\n      }\r\n    }\r\n    document.getElementById('workspace-dropdown')?.classList.remove('visible');\r\n  });\r\n  \r\n  document.getElementById('load-workspace')?.addEventListener('click', async () => {\r\n    try {\r\n      const workspaces = await platform.getWorkspaces();\r\n      if (workspaces.length === 0) {\r\n        alert('No saved workspaces');\r\n        return;\r\n      }\r\n      \r\n      const names = workspaces.map((w, i) => `${i + 1}. ${w.name}`).join('\\n');\r\n      const choice = prompt(`Select workspace:\\n${names}\\n\\nEnter number:`);\r\n      \r\n      if (choice) {\r\n        const index = parseInt(choice) - 1;\r\n        if (index >= 0 && index < workspaces.length) {\r\n          await platform.loadWorkspace(workspaces[index].id);\r\n          alert(`Loaded workspace \"${workspaces[index].name}\"`);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      alert(`Failed to load workspace: ${error}`);\r\n    }\r\n    document.getElementById('workspace-dropdown')?.classList.remove('visible');\r\n  });\r\n  \r\n  // Update dock periodically\r\n  setInterval(updateDock, 1000);\r\n}\r\n\r\nfunction refreshAppGrid() {\r\n  const apps = platform.getApplicationDirectory();\r\n  const appGrid = document.getElementById('app-grid');\r\n  \r\n  if (appGrid) {\r\n    appGrid.innerHTML = apps.map(app => `\r\n      <div class=\"app-card\" data-app-id=\"${app.appId}\">\r\n        <div class=\"app-icon\">${app.icon || '📱'}</div>\r\n        <div class=\"app-name\">${app.name}</div>\r\n        <div class=\"app-description\">${app.description || ''}</div>\r\n      </div>\r\n    `).join('') + `\r\n      <div class=\"app-card app-card-add\" id=\"add-external-app-btn\">\r\n        <div class=\"app-icon\">➕</div>\r\n        <div class=\"app-name\">Add External App</div>\r\n        <div class=\"app-description\">Add custom web app</div>\r\n      </div>\r\n    `;\r\n    \r\n    // Add click handlers\r\n    appGrid.querySelectorAll('.app-card:not(.app-card-add)').forEach(card => {\r\n      card.addEventListener('click', async () => {\r\n        const appId = card.getAttribute('data-app-id');\r\n        if (appId) {\r\n          await launchApp(appId);\r\n          document.getElementById('app-launcher')?.classList.remove('visible');\r\n        }\r\n      });\r\n    });\r\n    \r\n    // Re-attach add button handler\r\n    document.getElementById('add-external-app-btn')?.addEventListener('click', () => {\r\n      showAddExternalAppDialog();\r\n    });\r\n  }\r\n}\r\n\r\nfunction showAddExternalAppDialog() {\r\n  const dialog = document.createElement('div');\r\n  dialog.style.cssText = `\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(0,0,0,0.7);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 3000;\r\n  `;\r\n  \r\n  dialog.innerHTML = `\r\n    <div style=\"background: white; border-radius: 12px; padding: 24px; max-width: 500px; width: 90%;\">\r\n      <h2 style=\"margin: 0 0 20px 0; color: #333;\">Add External App</h2>\r\n      \r\n      <div style=\"margin-bottom: 16px;\">\r\n        <label style=\"display: block; margin-bottom: 4px; color: #666; font-size: 14px;\">App Name</label>\r\n        <input type=\"text\" id=\"ext-app-name\" placeholder=\"My Custom App\" \r\n               style=\"width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 6px; font-size: 14px;\">\r\n      </div>\r\n      \r\n      <div style=\"margin-bottom: 16px;\">\r\n        <label style=\"display: block; margin-bottom: 4px; color: #666; font-size: 14px;\">App URL</label>\r\n        <input type=\"url\" id=\"ext-app-url\" placeholder=\"https://example.com/app\" \r\n               style=\"width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 6px; font-size: 14px;\">\r\n      </div>\r\n      \r\n      <div style=\"margin-bottom: 16px;\">\r\n        <label style=\"display: block; margin-bottom: 4px; color: #666; font-size: 14px;\">Icon (emoji)</label>\r\n        <input type=\"text\" id=\"ext-app-icon\" placeholder=\"🌐\" maxlength=\"2\"\r\n               style=\"width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 6px; font-size: 14px;\">\r\n      </div>\r\n      \r\n      <div style=\"margin-bottom: 20px;\">\r\n        <label style=\"display: block; margin-bottom: 4px; color: #666; font-size: 14px;\">Description (optional)</label>\r\n        <input type=\"text\" id=\"ext-app-desc\" placeholder=\"A custom web application\" \r\n               style=\"width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 6px; font-size: 14px;\">\r\n      </div>\r\n      \r\n      <div style=\"display: flex; gap: 12px; justify-content: flex-end;\">\r\n        <button id=\"cancel-add-app\" style=\"padding: 8px 16px; border: 1px solid #ddd; background: white; border-radius: 6px; cursor: pointer;\">\r\n          Cancel\r\n        </button>\r\n        <button id=\"confirm-add-app\" style=\"padding: 8px 16px; border: none; background: #667eea; color: white; border-radius: 6px; cursor: pointer;\">\r\n          Add App\r\n        </button>\r\n      </div>\r\n    </div>\r\n  `;\r\n  \r\n  document.body.appendChild(dialog);\r\n  \r\n  // Focus first input\r\n  setTimeout(() => {\r\n    (document.getElementById('ext-app-name') as HTMLInputElement)?.focus();\r\n  }, 100);\r\n  \r\n  // Cancel button\r\n  dialog.querySelector('#cancel-add-app')?.addEventListener('click', () => {\r\n    dialog.remove();\r\n  });\r\n  \r\n  // Confirm button\r\n  dialog.querySelector('#confirm-add-app')?.addEventListener('click', async () => {\r\n    const name = (document.getElementById('ext-app-name') as HTMLInputElement)?.value;\r\n    const url = (document.getElementById('ext-app-url') as HTMLInputElement)?.value;\r\n    const icon = (document.getElementById('ext-app-icon') as HTMLInputElement)?.value || '🌐';\r\n    const description = (document.getElementById('ext-app-desc') as HTMLInputElement)?.value;\r\n    \r\n    if (!name || !url) {\r\n      alert('Please enter both name and URL');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Validate URL\r\n      new URL(url);\r\n      \r\n      // Add app to platform\r\n      platform.addExternalApp({\r\n        name,\r\n        url,\r\n        icon,\r\n        description\r\n      });\r\n      \r\n      // Refresh app grid\r\n      refreshAppGrid();\r\n      \r\n      // Close dialog\r\n      dialog.remove();\r\n      \r\n      // Show success message\r\n      const notification = document.createElement('div');\r\n      notification.style.cssText = `\r\n        position: fixed;\r\n        top: 80px;\r\n        right: 20px;\r\n        background: #10b981;\r\n        color: white;\r\n        padding: 12px 20px;\r\n        border-radius: 8px;\r\n        box-shadow: 0 4px 12px rgba(0,0,0,0.15);\r\n        z-index: 4000;\r\n      `;\r\n      notification.textContent = `Added \"${name}\" to app directory`;\r\n      document.body.appendChild(notification);\r\n      setTimeout(() => notification.remove(), 3000);\r\n      \r\n    } catch (error) {\r\n      alert('Invalid URL. Please enter a valid web address.');\r\n    }\r\n  });\r\n  \r\n  // Close on background click\r\n  dialog.addEventListener('click', (e) => {\r\n    if (e.target === dialog) {\r\n      dialog.remove();\r\n    }\r\n  });\r\n}\r\n\r\nasync function launchApp(appId: string) {\r\n  try {\r\n    console.log('[UI] Launching app:', appId);\r\n    await platform.launchApplication(appId);\r\n    updateDock();\r\n  } catch (error) {\r\n    console.error('[UI] Failed to launch app:', error);\r\n    alert(`Failed to launch app: ${error}`);\r\n  }\r\n}\r\n\r\nasync function autoLaunchDemoApps() {\r\n  try {\r\n    console.log('[Web Platform] Auto-launching demo apps...');\r\n    \r\n    // Calculate exact 50/50 split with margins\r\n    const margin = 20;\r\n    const gap = 10;\r\n    const topOffset = 80;\r\n    const bottomOffset = 100;\r\n    \r\n    const availableWidth = window.innerWidth - (2 * margin) - gap;\r\n    const windowWidth = Math.floor(availableWidth / 2);\r\n    const windowHeight = window.innerHeight - topOffset - bottomOffset;\r\n    \r\n    // Launch Ticker List on the left side (exactly 50%)\r\n    const tickerListId = await platform.launchApplication('ticker-list', {\r\n      bounds: {\r\n        x: margin,\r\n        y: topOffset,\r\n        width: windowWidth,\r\n        height: windowHeight\r\n      }\r\n    });\r\n    \r\n    // Wait a moment for first app to initialize\r\n    await new Promise(resolve => setTimeout(resolve, 500));\r\n    \r\n    // Launch Ticker Details on the right side (exactly 50%)\r\n    const tickerDetailsId = await platform.launchApplication('ticker-details', {\r\n      bounds: {\r\n        x: margin + windowWidth + gap,\r\n        y: topOffset,\r\n        width: windowWidth,\r\n        height: windowHeight\r\n      }\r\n    });\r\n    \r\n    console.log('[Web Platform] Demo apps launched:', { tickerListId, tickerDetailsId });\r\n    updateDock();\r\n  } catch (error) {\r\n    console.error('[Web Platform] Failed to auto-launch demo apps:', error);\r\n  }\r\n}\r\n\r\nfunction updateDock() {\r\n  const runningApps = platform.getRunningApplications();\r\n  const dock = document.getElementById('platform-dock');\r\n  \r\n  if (!dock) return;\r\n  \r\n  // Get app directory for icons\r\n  const appDirectory = platform.getApplicationDirectory();\r\n  const appMap = new Map(appDirectory.map(app => [app.appId, app]));\r\n  \r\n  dock.innerHTML = runningApps.map(app => {\r\n    const appInfo = appMap.get(app.appId);\r\n    const icon = appInfo?.icon || '📱';\r\n    \r\n    return `\r\n      <div class=\"dock-app ${app.state === 'normal' ? 'active' : ''}\" data-instance-id=\"${app.instanceId}\">\r\n        <div class=\"dock-app-icon\">${icon}</div>\r\n        <div class=\"dock-app-close\">×</div>\r\n      </div>\r\n    `;\r\n  }).join('');\r\n  \r\n  // Add click handlers\r\n  dock.querySelectorAll('.dock-app').forEach(dockApp => {\r\n    const instanceId = dockApp.getAttribute('data-instance-id');\r\n    \r\n    // Focus on click\r\n    dockApp.addEventListener('click', (e) => {\r\n      if (!(e.target as HTMLElement).classList.contains('dock-app-close')) {\r\n        const windowManager = platform.getWindowManager();\r\n        if (windowManager && instanceId) {\r\n          const window = windowManager.getWindow(instanceId);\r\n          if (window) {\r\n            if (window.state === 'minimized') {\r\n              windowManager.maximizeWindow(instanceId);\r\n            }\r\n            window.focus();\r\n          }\r\n        }\r\n      }\r\n    });\r\n    \r\n    // Close on X click\r\n    const closeBtn = dockApp.querySelector('.dock-app-close');\r\n    closeBtn?.addEventListener('click', async (e) => {\r\n      e.stopPropagation();\r\n      if (instanceId) {\r\n        await platform.closeApplication(instanceId);\r\n        updateDock();\r\n      }\r\n    });\r\n  });\r\n}\r\n"],"names":["BrowserWindowManager","containerId","container","config","windowId","windowWrapper","_a","_b","_c","_d","titleBar","iframe","windowInstance","title","titleText","controls","minimizeBtn","maximizeBtn","closeBtn","text","onClick","button","e","wrapper","isDragging","dragStartX","dragStartY","windowStartX","windowStartY","window","deltaX","deltaY","direction","handle","isResizing","startX","startY","startWidth","startHeight","startLeft","startTop","newWidth","newHeight","newLeft","newTop","baseStyle","cursors","positionStyle","position","size","ChannelImpl","id","type","displayMetadata","__publicField","context","typeListeners","allListeners","handler","error","contextType","contexts","PrivateChannelImpl","ChannelManager","standardChannels","channelDef","channel","channelId","IntentResolver","registration","intent","appId","handlers","filtered","h","metadata","target","selectedHandler","intents","intentName","apps","ContextRouter","subscriptionId","subscription","excludeAppId","typeSubscribers","allSubscribers","subscriberIds","subscriptionIds","FDC3Monitor","maxMessages","message","fullMessage","listener","messages","stats","msg","fdc3Monitor","PostMessageRouter","event","payload","messageId","sourceAppId","source","result","targetApp","listenerId","WebWorkspaceManager","storage","name","workspace","workspaceId","keys","workspaces","key","a","b","json","interval","WebPlatformCore","windows","url","directory","app","appManifest","windowConfig","_e","_f","_g","instanceId","w","savedApps","StorageManager","resolve","reject","request","db","value","store","item","prefix","k","estimate","data","workspaceKeys","settingKeys","jsonData","detectPlatform","detectCapabilities","ua","detectBrowserName","detectBrowserVersion","getMissingCapabilities","capabilities","missing","requiredCapabilities","recommendedCapabilities","cap","isBrowserSupported","getCompatibilityReport","platform","warnings","match","displayCompatibilityWarning","report","FDC3MonitorUI","blob","messagesEl","countEl","time","directionColor","directionIcon","sentEl","receivedEl","header","startRight","startBottom","rect","fdc3MonitorUI","compatReport","platformType","loading","setupUI","autoLaunchDemoApps","refreshAppGrid","btn","names","i","choice","index","updateDock","appGrid","card","launchApp","showAddExternalAppDialog","dialog","icon","description","notification","margin","gap","topOffset","bottomOffset","availableWidth","windowWidth","windowHeight","tickerListId","tickerDetailsId","runningApps","dock","appDirectory","appMap","appInfo","dockApp","windowManager"],"mappings":"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"}